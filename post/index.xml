<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Moeah&#39;s BLOG</title>
    <link>https://foxi-yiyi.github.io/post/</link>
    <description>Recent content in Posts on Moeah&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 09 Dec 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://foxi-yiyi.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>操作系统02：线程和并发</title>
      <link>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F02%E7%BA%BF%E7%A8%8B%E5%92%8C%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F02%E7%BA%BF%E7%A8%8B%E5%92%8C%E5%B9%B6%E5%8F%91/</guid>
      <description>线程和并发 第三章节介绍的进程模型将进程假设为一个使用单线程控制的程序。然而，几乎所有的现代操作系统提供了在一个进程中包含多个线程的特性。在多</description>
    </item>
    
    <item>
      <title>操作系统03：CPU调度</title>
      <link>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F03cpu%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F03cpu%E8%B0%83%E5%BA%A6/</guid>
      <description>Chapter 5 CPU Scheduling CPU调度是多程序操作系统的基础。通过进程间CPU的切换，操作系统可以更好地利用计算机。本章节中，将会介绍基本的CPU调度概念以及目</description>
    </item>
    
    <item>
      <title>操作系统概念第七版</title>
      <link>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5%E7%AC%AC%E4%B8%83%E7%89%88/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5%E7%AC%AC%E4%B8%83%E7%89%88/</guid>
      <description>操作系统——01：进程的概念 第一章 导论 ​ 操作系统是作为计算机硬件和计算机用户之间的中介的程序。操作系统的目的就是为用户提供方便且有效的执行程</description>
    </item>
    
    <item>
      <title>PostgreSQL内存池结构解析</title>
      <link>https://foxi-yiyi.github.io/post/postgresql%E5%86%85%E5%AD%98%E6%B1%A0%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/postgresql%E5%86%85%E5%AD%98%E6%B1%A0%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/</guid>
      <description>PostgreSQL内存池结构解析 1.内存上下文 ​ postgresql在7版本引入了内存上下文机制，目的是解决日益严重的内存泄漏问题。在引入</description>
    </item>
    
    <item>
      <title>PostgreSQL中的对齐宏——TYPEALIGN</title>
      <link>https://foxi-yiyi.github.io/post/postgresql%E4%B8%AD%E7%9A%84%E5%AF%B9%E9%BD%90%E5%AE%8Ftypealign/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/postgresql%E4%B8%AD%E7%9A%84%E5%AF%B9%E9%BD%90%E5%AE%8Ftypealign/</guid>
      <description>PostgreSQL的对齐宏——TYPEALIGN 分析 在理解TYPEALIGN之前现理解一下这个词语的意义，TYPEALIGN乍一看就是一个</description>
    </item>
    
    <item>
      <title>GNU Make 项目管理</title>
      <link>https://foxi-yiyi.github.io/post/gnu.make.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/gnu.make.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</guid>
      <description>第一章 规则 1.1规则 具体规则 ​ 具体规则指的是用特定的文件为工作目标的必要条件，每个规则都可以有多个工作目标。形式如： 1 vpath.o variable.o : make.h config.h dep.h 这代表vp</description>
    </item>
    
    <item>
      <title>C语言：什么是指针，自己的小理解</title>
      <link>https://foxi-yiyi.github.io/post/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>什么是指向XXX？ 首先C语言中存在多种数据类型，int，double，float或struct等。计算机使用内存来保存运算过程中某些必要的具</description>
    </item>
    
    <item>
      <title>操作系统：进程的概念</title>
      <link>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F01%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F01%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%A6%82%E5%BF%B5/</guid>
      <description>操作系统——01：进程的概念 设计操作系统的目的是什么？ 对于某个程序来说，一定会同时需要CPU和IO同时操作，有时候会出现CPU的利用率不高的</description>
    </item>
    
    <item>
      <title>Quantum Break English pieces</title>
      <link>https://foxi-yiyi.github.io/post/quantum-break-english-pieces/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://foxi-yiyi.github.io/post/quantum-break-english-pieces/</guid>
      <description>Quantum Break English pieces chapter 1 —— River Port University PHRC Poster 1: STOP MONARCH! For years Monarch Solution has been buying out River Port piece by piece. Steamrolling1 over businesses and local culture to establish corporate dominance2. On October 9th,they intend to demolish3 the historic River Port University library to make way for additional Monarch-funded university research centers . They &amp;rsquo;ve gone too far. Sick of Monarch Solutions</description>
    </item>
    
  </channel>
</rss>